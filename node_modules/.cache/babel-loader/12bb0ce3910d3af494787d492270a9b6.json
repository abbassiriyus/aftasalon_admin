{"ast":null,"code":"var toInteger = require('../internals/to-integer');\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};","map":{"version":3,"names":["toInteger","require","max","Math","min","module","exports","index","length","integer"],"sources":["/home/abbas/Documents/GitHub1/aftasalon_admin/node_modules/core-js-pure/internals/to-absolute-index.js"],"sourcesContent":["var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAElD,IAAIC,GAAG,GAAGC,IAAI,CAACD,GAAG;AAClB,IAAIE,GAAG,GAAGD,IAAI,CAACC,GAAG;;AAElB;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,UAAUC,KAAK,EAAEC,MAAM,EAAE;EACxC,IAAIC,OAAO,GAAGT,SAAS,CAACO,KAAK,CAAC;EAC9B,OAAOE,OAAO,GAAG,CAAC,GAAGP,GAAG,CAACO,OAAO,GAAGD,MAAM,EAAE,CAAC,CAAC,GAAGJ,GAAG,CAACK,OAAO,EAAED,MAAM,CAAC;AACtE,CAAC"},"metadata":{},"sourceType":"script"}