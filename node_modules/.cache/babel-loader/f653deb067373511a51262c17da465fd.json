{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLayoutUpdateEffect = exports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _canUseDom = _interopRequireDefault(require(\"../Dom/canUseDom\"));\n/**\r\n * Wrap `React.useLayoutEffect` which will not throw warning message in test env\r\n */\nvar useLayoutEffect = process.env.NODE_ENV !== 'test' && (0, _canUseDom.default)() ? React.useLayoutEffect : React.useEffect;\nvar _default = useLayoutEffect;\nexports.default = _default;\nvar useLayoutUpdateEffect = function useLayoutUpdateEffect(callback, deps) {\n  var firstMountRef = React.useRef(true);\n  useLayoutEffect(function () {\n    if (!firstMountRef.current) {\n      return callback();\n    }\n  }, deps);\n\n  // We tell react that first mount has passed\n  useLayoutEffect(function () {\n    firstMountRef.current = false;\n    return function () {\n      firstMountRef.current = true;\n    };\n  }, []);\n};\nexports.useLayoutUpdateEffect = useLayoutUpdateEffect;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","Object","defineProperty","exports","value","useLayoutUpdateEffect","React","_canUseDom","useLayoutEffect","process","env","NODE_ENV","useEffect","_default","callback","deps","firstMountRef","useRef","current"],"sources":["C:/Users/User/Documents/GitHub/aftasalon_admin/node_modules/rc-util/lib/hooks/useLayoutEffect.js"],"sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\r\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.useLayoutUpdateEffect = exports.default = void 0;\r\nvar React = _interopRequireWildcard(require(\"react\"));\r\nvar _canUseDom = _interopRequireDefault(require(\"../Dom/canUseDom\"));\r\n/**\r\n * Wrap `React.useLayoutEffect` which will not throw warning message in test env\r\n */\r\nvar useLayoutEffect = process.env.NODE_ENV !== 'test' && (0, _canUseDom.default)() ? React.useLayoutEffect : React.useEffect;\r\nvar _default = useLayoutEffect;\r\nexports.default = _default;\r\nvar useLayoutUpdateEffect = function useLayoutUpdateEffect(callback, deps) {\r\n  var firstMountRef = React.useRef(true);\r\n  useLayoutEffect(function () {\r\n    if (!firstMountRef.current) {\r\n      return callback();\r\n    }\r\n  }, deps);\r\n\r\n  // We tell react that first mount has passed\r\n  useLayoutEffect(function () {\r\n    firstMountRef.current = false;\r\n    return function () {\r\n      firstMountRef.current = true;\r\n    };\r\n  }, []);\r\n};\r\nexports.useLayoutUpdateEffect = useLayoutUpdateEffect;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAC5F,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAC9FE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,qBAAqB,GAAGF,OAAO,CAACJ,OAAO,GAAG,KAAK,CAAC;AACxD,IAAIO,KAAK,GAAGN,uBAAuB,CAACF,OAAO,CAAC,OAAO,CAAC,CAAC;AACrD,IAAIS,UAAU,GAAGV,sBAAsB,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACpE;AACA;AACA;AACA,IAAIU,eAAe,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,IAAI,CAAC,CAAC,EAAEJ,UAAU,CAACR,OAAO,EAAE,CAAC,GAAGO,KAAK,CAACE,eAAe,GAAGF,KAAK,CAACM,SAAS;AAC5H,IAAIC,QAAQ,GAAGL,eAAe;AAC9BL,OAAO,CAACJ,OAAO,GAAGc,QAAQ;AAC1B,IAAIR,qBAAqB,GAAG,SAASA,qBAAqBA,CAACS,QAAQ,EAAEC,IAAI,EAAE;EACzE,IAAIC,aAAa,GAAGV,KAAK,CAACW,MAAM,CAAC,IAAI,CAAC;EACtCT,eAAe,CAAC,YAAY;IAC1B,IAAI,CAACQ,aAAa,CAACE,OAAO,EAAE;MAC1B,OAAOJ,QAAQ,CAAC,CAAC;IACnB;EACF,CAAC,EAAEC,IAAI,CAAC;;EAER;EACAP,eAAe,CAAC,YAAY;IAC1BQ,aAAa,CAACE,OAAO,GAAG,KAAK;IAC7B,OAAO,YAAY;MACjBF,aAAa,CAACE,OAAO,GAAG,IAAI;IAC9B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AACDf,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB"},"metadata":{},"sourceType":"script"}