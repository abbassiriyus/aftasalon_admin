{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({\n  target: 'Array',\n  proto: true,\n  forced: FORCED\n}, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});","map":{"version":3,"names":["$","require","fails","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","undefined","FORCED","target","proto","forced","arg","A","n","i","k","length","len","E","arguments","TypeError"],"sources":["/home/abbas/Documents/GitHub1/aftasalon_admin/node_modules/core-js-pure/modules/es.array.concat.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}